<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd      
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!-- author:minn QQ:394286006 -->
	<context:component-scan base-package="p.minn.common.aop.mybatis" />
	<context:property-placeholder
		location="classpath:/spring/memcached/application.memcached.properties" />
	<bean id="myKeyGenerator" class="p.minn.common.utils.MyKeyGenerator" />

	<bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
		<property name="servers" value="${memcached.servers}" />
		<property name="protocol" value="${memcached.protocol}" />
		<property name="transcoder">
			<bean class="net.spy.memcached.transcoders.SerializingTranscoder">
				<property name="compressionThreshold" value="${memcached.compressionThreshold}" />
			</bean>
		</property>
		<property name="opTimeout" value="${memcached.opTimeout}" />
		<property name="timeoutExceptionThreshold" value="${memcached.timeoutExceptionThreshold}" />
		<property name="hashAlg">
			<value type="net.spy.memcached.DefaultHashAlgorithm">
				${memcached.hashAlg}
			</value>
		</property>
		<property name="locatorType" value="${memcached.locatorType}" />
		<property name="failureMode" value="${memcached.failureMode}" />
		<property name="useNagleAlgorithm" value="${memcached.useNagleAlgorithm}" />
	</bean>

	<aop:config proxy-target-class="false">
		<aop:pointcut
			expression="execution(public 
		* p.minn.privilege.repository.*.*(..))"
			id="memcachedcache" />
		<aop:advisor advice-ref="memCachedProxy" pointcut-ref="memcachedcache" />
	</aop:config>
</beans>